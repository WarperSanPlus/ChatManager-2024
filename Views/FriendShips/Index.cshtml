@{
    ViewBag.Title = "Index";
}

<h2>
    @Helper.Image("/Content/UI-Icons/friendships.png", "UserSmallAvatar")
    <span>Gestion des amitiés</span>
</h2>

<hr />
<div>
    <!-- SEARCH SECTION -->

    <div id="search-bar">

        <input type="text" id="targetNameInput" placeholder="recherche..." class="form-control">
        <i id="search-btn" class="fa-solid fa-fw fa-search" title="Rechercher"></i>
    </div>

    <div id="search-criterias">
        <label title="Demande possible">
            <input type="checkbox" id="showOthersCheckbox" checked><i class="fa-solid fa-fw fa-plus-circle positive"></i>
        </label>
        <label title="À accepter">
            <input type="checkbox" id="showReceivedCheckbox" checked><i class="fa-solid fa-fw fa-check positive"></i>
        </label>
        <label title="Amis">
            <input type="checkbox" id="showFriendsCheckbox" checked><i class="fa-solid fa-fw fa-circle-check positive"></i>
        </label>
        <label title="En attente">
            <input type="checkbox" id="showSentCheckbox" checked><i class="fa-solid fa-fw fa-hourglass-start positive"></i>
        </label>
        <label title="Demande déclinée">
            <input type="checkbox" id="showDeclinedCheckbox" checked><i class="fa fa-fw fa-times-circle negative"></i>
        </label>
        <label title="Bloqué">
            <input type="checkbox" id="showBlockedCheckbox" checked><i class="fa-solid fa-fw fa-ban negative"></i>
        </label>
    </div>
</div>

<hr />
<div>
    <div id="RelationsRefreshContainer"><!-- REFRESH CONTAINER --></div>
</div>

@section Scripts {
    <script defer>
        function search() {

            let targetName = document.getElementById("targetNameInput").value.trim();

            let showOthers = document.getElementById("showOthersCheckbox").checked;
            let showReceived = document.getElementById("showReceivedCheckbox").checked;
            let showFriends = document.getElementById("showFriendsCheckbox").checked;
            let showSent = document.getElementById("showSentCheckbox").checked;
            let showDeclined = document.getElementById("showDeclinedCheckbox").checked;
            let showBlockeds = document.getElementById("showBlockedCheckbox").checked;

            relations.replaceData({
                showOthers: showOthers,
                showReceived: showReceived,
                showFriends: showFriends,
                showSent: showSent,
                showDeclined: showDeclined,
                showBlocked: showBlockeds,
                targetName: targetName
            });
            relations.refresh(true);
        };

        function popup(message, callback = null) {
            bootbox.confirm({
                message: message,
                buttons: {
                    confirm: {
                        label: 'Oui',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'Non',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {

                    if (result && callback != null)
                        callback();
                }
            });
        }

        function sendFriendRequest(targetUserId, targetUserName) {
            popup(`Voulez-vous vraiment demander en amitié ${targetUserName} ?`, function () {
                relations.commandPost("@Url.Action("CreateRequest")", {
                    targetUserId: targetUserId
                });
            });
        };

        function cancelFriendRequest(targetUserId, targetUserName) {
            popup(`Voulez-vous vraiment annuler la demande  en amitié  de ${targetUserName} ?`, function () {
            relations.commandPost("@Url.Action("CancelRequest")", {
                targetUserId: targetUserId
            });
            });
        };

        function acceptFriendRequest(targetUserId, targetUserName) {
            popup(`Voulez-vous vraiment accepter la demande  en amitié  de ${targetUserName} ?`, function () {
            relations.commandPost("@Url.Action("AcceptRequest")", {
                targetUserId: targetUserId,
                isAccepting: true
            });
            });
        };

        function declineFriendRequest(targetUserId, targetUserName) {
                popup(`Voulez-vous vraiment refuser la demande  en amitié  de ${targetUserName} ?`, function () {
            relations.commandPost("@Url.Action("AcceptRequest")", {
                targetUserId: targetUserId,
                isAccepting: false
            });
                });
        };

        function removeFriend(targetUserId, targetUserName) {
            popup(`Voulez-vous vraiment retiré votre précieux ami ${targetUserName} ?`, function () {
            relations.commandPost("@Url.Action("CancelRequest")", {
                targetUserId: targetUserId
            });
            });
        };

        // --- PARTIAL REFRESH ---
        function getTargetUserId(elem) {
            return elem.closest('.relation-parent').attr('data-id');
        };

        function getTargetUserName(elem) {
            return elem.closest('.relation-parent').attr('data-name');
        };

        let onRefresh = function () {
            let functions = {
                "canSend": sendFriendRequest,
                "accept-pending": acceptFriendRequest,
                "deny-pending": declineFriendRequest,
                "cancel-pending": cancelFriendRequest,
                "remove": removeFriend
            };

            for (const [key, value] of Object.entries(functions)) {
                $("." + key).click(function () {
                    let id = getTargetUserId($(this));
                    let name = getTargetUserName($(this));

                    value(id, name);
                });
            }
        };

        let relations = new PartialRefresh("@Url.Action("GetRelations")", "RelationsRefreshContainer", 1, onRefresh, false);
        // ---

        search();
        $("#search-btn").click(search)
        $("#search-criterias input").click(search);
        initTimeout(120);
    </script>
}

@section Styles {
    <link rel="stylesheet" href="~/Content/RelationStyles.css" />
}
